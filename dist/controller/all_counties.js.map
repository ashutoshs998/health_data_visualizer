{"version":3,"sources":["../../src/controller/all_counties.js"],"names":["module","exports","counties","req","res","next","Diabetes_Prevalence","findAll","attributes","fn","col","then","data","json","error","message","catch","err","search_county","where","county","$like","body","add_fav","fav_county","create","result","get_fav","get_data_by_county","Diabetes_Incidence","year","Diabetes_Prevalence_by_Sex","Inactivity_Prevalence","Inactivity_Prevalence_by_Sex","Obesity_Prevalence","Obesity_Prevalence_by_Sex","get_chart"],"mappings":"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","file":"all_counties.js","sourcesContent":["import db from '../db';\nimport Sequelize from \"sequelize\";\n\nmodule.exports = {\n\n    counties: (req, res, next) => {\n        db.Diabetes_Prevalence.findAll({\n            attributes: [\n                [Sequelize.fn('DISTINCT', Sequelize.col('county')), 'county'],\n            ],\n        }).then((data) => {\n            res.json({ error: 0, message: \"counties fetched\", data: data })\n        }).catch(err => next(err))\n    },\n\n    search_county: (req, res, next) => {\n        db.Diabetes_Prevalence.findAll({\n            where: { county: { $like: '%' + req.body.county + '%' } },\n            attributes: [\n                [Sequelize.fn('DISTINCT', Sequelize.col('county')), 'county'],\n            ],\n        }).then((data) => {\n            res.json({ error: 0, message: \"counties found\", data: data })\n        }).catch(err => next(err))\n    },\n\n    add_fav: (req, res, next) => {\n        db.fav_county.create({\n            county: req.body.county\n        }).then((data) => {\n            res.json({ error: 0, message: \"county added to favourites\", result: data })\n        }).catch(err => next(err));\n    },\n\n    get_fav: (req, res, next) => {\n        db.fav_county.findAll({}).then((fav_county) => {\n            res.json({ error: 0, message: \"favourite counties\", data: fav_county });\n        })\n    },\n\n    get_data_by_county: (req, res, next) => {\n        db.Diabetes_Incidence.findAll({ where: { county: req.body.county, year: 2013 } }).then((Diabetes_Incidence) => {\n            db.Diabetes_Prevalence.findAll({ where: { county: req.body.county, year: 2013 } }).then((Diabetes_Prevalence) => {\n                db.Diabetes_Prevalence_by_Sex.findAll({ where: { county: req.body.county, year: 2013 } }).then((Diabetes_Prevalence_by_Sex) => {\n                    db.Inactivity_Prevalence.findAll({ where: { county: req.body.county, year: 2013 } }).then((Inactivity_Prevalence) => {\n                        db.Inactivity_Prevalence_by_Sex.findAll({ where: { county: req.body.county, year: 2013 } }).then((Inactivity_Prevalence_by_Sex) => {\n                            db.Obesity_Prevalence.findAll({ where: { county: req.body.county, year: 2013 } }).then((Obesity_Prevalence) => {\n                                db.Obesity_Prevalence_by_Sex.findAll({ where: { county: req.body.county, year: 2013 } }).then((Obesity_Prevalence_by_Sex) => {\n                                    res.json({\n                                        error: 0,\n                                        message: \"data fetched by county\",\n                                        Diabetes_Incidence: Diabetes_Incidence,\n                                        Diabetes_Prevalence,\n                                        Diabetes_Prevalence_by_Sex,\n                                        Inactivity_Prevalence,\n                                        Inactivity_Prevalence_by_Sex,\n                                        Obesity_Prevalence,\n                                        Obesity_Prevalence_by_Sex\n                                    })\n                                })\n                            })\n                        })\n                    })\n                })\n            })\n        }).catch(err => next(err));\n    },\n\n    get_chart: (req, res, next) => {\n        db.Diabetes_Incidence.findAll({ where: { county: req.body.county } }).then((Diabetes_Incidence) => {\n            db.Diabetes_Prevalence.findAll({ where: { county: req.body.county } }).then((Diabetes_Prevalence) => {\n                db.Diabetes_Prevalence_by_Sex.findAll({ where: { county: req.body.county } }).then((Diabetes_Prevalence_by_Sex) => {\n                    db.Inactivity_Prevalence.findAll({ where: { county: req.body.county } }).then((Inactivity_Prevalence) => {\n                        db.Inactivity_Prevalence_by_Sex.findAll({ where: { county: req.body.county } }).then((Inactivity_Prevalence_by_Sex) => {\n                            db.Obesity_Prevalence.findAll({ where: { county: req.body.county } }).then((Obesity_Prevalence) => {\n                                db.Obesity_Prevalence_by_Sex.findAll({ where: { county: req.body.county } }).then((Obesity_Prevalence_by_Sex) => {\n                                    res.json({\n                                        error: 0,\n                                        message: \"data fetched by county\",\n                                        Diabetes_Incidence: Diabetes_Incidence,\n                                        Diabetes_Prevalence,\n                                        Diabetes_Prevalence_by_Sex,\n                                        Inactivity_Prevalence,\n                                        Inactivity_Prevalence_by_Sex,\n                                        Obesity_Prevalence,\n                                        Obesity_Prevalence_by_Sex\n                                    })\n                                })\n                            })\n                        })\n                    })\n                })\n            })\n        }).catch(err => next(err));\n    }\n}"]}